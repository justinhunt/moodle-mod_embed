{"version":3,"file":"module.min.js","sources":["../src/module.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript library for the mod_embed module.\n *\n * @package    mod\n * @subpackage mod_embed\n * @copyright  2014 Justin Hunt  {@link http://poodll.com}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/log'], function($, log) {\n    \"use strict\"; // jshint ;_;\n\n    /*\n    This file is to manage the quiz stage\n     */\n\n    log.debug('Mod Embed main module : initialising');\n\n    return {\n\n\n\n\n\n    \n    // Define a function to handle the AJAX response.\n    complete: function(id,o,args) {\n    \tvar id = id; // Transaction ID.\n        var returndata = o.responseText; // Response data.\n        var Y = M.mod_embed.jscomplete.Y;\n    \t//console.log(returndata);\n        var result = Y.JSON.parse(returndata);\n        if(result.success){\n        \tM.mod_embed.jscomplete.iscomplete = true;\n        \tM.mod_embed.timer.iscomplete = true;\n        \tif(M.mod_embed.timer.showcompletion){\n        \t\tY.one('#embed-completed').setStyle('display', 'block');\n        \t}\n        }\n    },\n    \n    docomplete: function(){\n    \tif (M.mod_embed.jscomplete.iscomplete){return;}\n    \tvar Y = M.mod_embed.jscomplete.Y;\n    \tvar uri  = 'ajaxcomplete.php?id=' +  M.mod_embed.jscomplete.cmid +\n    \t\t\t'&sesskey=' + M.cfg.sesskey;\n\t\tY.on('io:complete', M.mod_embed.jscomplete.complete, Y,null);\n\t\tY.io(uri);\n\t\treturn;\n    },\n\n// The countdown timer that is used on timed quizzes.\n  thetimer: {\n\n    //cleared to false on init\n    iscomplete: true,\n\n    // Timestamp at which time runs out, according to the student's computer's clock.\n    endtime: 0,\n\n    // This records the id of the timeout that updates the clock periodically,\n    // so we can cancel.\n    timeoutid: null,\n\n    /**\n     * @param Y the YUI object\n     * @param start, the timer starting time, in seconds.\n     * @param preview, is this a quiz preview?\n     */\n    init: function(Y, start,  cmid, showcompletion,iscomplete) {\n\n\n        if(start>0 && !iscomplete){\n\n            this.update();\n\n        }else if(iscomplete){\n            if(showcompletion){\n                $('#embed-completed').show();\n            }\n        }\n    },\n\n    /**\n     * Stop the timer, if it is running.\n     */\n    stop: function(e) {\n        if (timeoutid) {\n            clearTimeout(timeoutid);\n        }\n    },\n\n    /**\n     * Function to convert a number between 0 and 99 to a two-digit string.\n     */\n    two_digit: function(num) {\n        if (num < 10) {\n            return '0' + num;\n        } else {\n            return num;\n        }\n    },\n\n    // Define a function to handle the AJAX response.\n    complete: function(id,o,args) {\n        var returndata = o.responseText; // Response data.\n\n        $('#embed-timer').hide();\n        var result = JSON.parse(returndata);\n        if(result.success){\n            this.iscomplete = true;\n            if(this.showcompletion){\n                $('#embed-completed').show();\n            }\n        }\n\n    },\n\n    // Function to update the clock with the current time left, and submit the quiz if necessary.\n    update: function() {\n        var secondsleft = Math.floor((this.endtime - new Date().getTime())/1000);\n\n        // If time has expired, set the hidden form field that says time has expired and submit\n        if (secondsleft < 0) {\n            this.stop(null);\n            var uri  = 'ajaxcomplete.php?id=' +  M.mod_embed.timer.cmid +\n                '&sesskey=' + M.cfg.sesskey;\n            //console.log(uri);\n            Y.on('io:complete', this.complete, Y,null);\n            Y.io(uri);\n            return;\n        }\n\n        // If time has nearly expired, change the colour.\n        if (secondsleft < 100) {\n            $('#embed-timer').removeClass('timeleft' + (secondsleft + 2))\n                .removeClass('timeleft' + (secondsleft + 1))\n                .addClass('timeleft' + secondsleft);\n        }\n\n        // Update the time display.\n        var hours = Math.floor(secondsleft/3600);\n        secondsleft -= hours*3600;\n        var minutes = Math.floor(secondsleft/60);\n        secondsleft -= minutes*60;\n        var seconds = secondsleft;\n        $('#embed-time-left').text(hours + ':' +\n            M.mod_embed.timer.two_digit(minutes) + ':' +\n            M.mod_embed.timer.two_digit(seconds));\n\n\n        // Arrange for this method to be called again soon.\n        this.timeoutid = setTimeout(M.mod_embed.timer.update, 100);\n    }\n}\n\n\n    }\n});"],"names":["define","$","log","debug","complete","id","o","args","returndata","responseText","Y","M","mod_embed","jscomplete","JSON","parse","success","iscomplete","timer","showcompletion","one","setStyle","docomplete","uri","cmid","cfg","sesskey","on","io","thetimer","endtime","timeoutid","init","start","update","show","stop","e","clearTimeout","two_digit","num","hide","this","secondsleft","Math","floor","Date","getTime","removeClass","addClass","hours","minutes","seconds","text","setTimeout"],"mappings":";;;;;;;;AAwBAA,0BAAO,CAAC,SAAU,aAAa,SAASC,EAAGC,YAOvCA,IAAIC,MAAM,wCAEH,CAQPC,SAAU,SAASC,GAAGC,EAAEC,UAEhBC,WAAaF,EAAEG,aACfC,EAAIC,EAAEC,UAAUC,WAAWH,EAElBA,EAAEI,KAAKC,MAAMP,YAChBQ,UACTL,EAAEC,UAAUC,WAAWI,YAAa,EACpCN,EAAEC,UAAUM,MAAMD,YAAa,EAC5BN,EAAEC,UAAUM,MAAMC,gBACpBT,EAAEU,IAAI,oBAAoBC,SAAS,UAAW,WAKpDC,WAAY,eACPX,EAAEC,UAAUC,WAAWI,gBACvBP,EAAIC,EAAEC,UAAUC,WAAWH,EAC3Ba,IAAO,uBAA0BZ,EAAEC,UAAUC,WAAWW,KAC1D,YAAcb,EAAEc,IAAIC,QACzBhB,EAAEiB,GAAG,cAAehB,EAAEC,UAAUC,WAAWT,SAAUM,EAAE,MACvDA,EAAEkB,GAAGL,OAKLM,SAAU,CAGRZ,YAAY,EAGZa,QAAS,EAITC,UAAW,KAOXC,KAAM,SAAStB,EAAGuB,MAAQT,KAAML,eAAeF,YAGxCgB,MAAM,IAAMhB,gBAENiB,SAEAjB,YACFE,gBACClB,EAAE,oBAAoBkC,QAQlCC,KAAM,SAASC,GACPN,WACAO,aAAaP,YAOrBQ,UAAW,SAASC,YACZA,IAAM,GACC,IAAMA,IAENA,KAKfpC,SAAU,SAASC,GAAGC,EAAEC,UAChBC,WAAaF,EAAEG,aAEnBR,EAAE,gBAAgBwC,OACL3B,KAAKC,MAAMP,YACdQ,eACDC,YAAa,EACfyB,KAAKvB,gBACJlB,EAAE,oBAAoBkC,SAOlCD,OAAQ,eACAS,YAAcC,KAAKC,OAAOH,KAAKZ,SAAU,IAAIgB,MAAOC,WAAW,QAG/DJ,YAAc,EAAG,MACZP,KAAK,UACNb,IAAO,uBAA0BZ,EAAEC,UAAUM,MAAMM,KACnD,YAAcb,EAAEc,IAAIC,eAExBhB,EAAEiB,GAAG,cAAee,KAAKtC,SAAUM,EAAE,WACrCA,EAAEkB,GAAGL,KAKLoB,YAAc,KACd1C,EAAE,gBAAgB+C,YAAY,YAAcL,YAAc,IACrDK,YAAY,YAAcL,YAAc,IACxCM,SAAS,WAAaN,iBAI3BO,MAAQN,KAAKC,MAAMF,YAAY,MACnCA,aAAqB,KAANO,UACXC,QAAUP,KAAKC,MAAMF,YAAY,IAEjCS,QADJT,aAAuB,GAARQ,QAEflD,EAAE,oBAAoBoD,KAAKH,MAAQ,IAC/BvC,EAAEC,UAAUM,MAAMqB,UAAUY,SAAW,IACvCxC,EAAEC,UAAUM,MAAMqB,UAAUa,eAI3BrB,UAAYuB,WAAW3C,EAAEC,UAAUM,MAAMgB,OAAQ"}